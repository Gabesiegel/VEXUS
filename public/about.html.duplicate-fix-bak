<!DOCTYPE HTML>
<html lang="en">
<head>
    <title>About - VExUS ATLAS</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    <meta name="author" content="Gabesiegel" />
    
    <!-- Initial visibility control -->
    <style>
    body {
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    </style>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        document.body.style.opacity = '1';
        // Initialize menu toggle after DOM is ready
        if (typeof initializeMenuToggle === 'function') {
            initializeMenuToggle();
        }
    });
    </script>
    
    <!-- CSS -->
    <!-- Reorganized CSS structure - single import -->
    <link rel="stylesheet" href="html5up-phantom/assets/css/main.css" />
    <noscript><link rel="stylesheet" href="html5up-phantom/assets/css/noscript.css" /></noscript>
    <!-- Reorganized CSS structure - single import -->
    <link rel="stylesheet" href="html5up-phantom/assets/css/main.css" />
    <noscript><link rel="stylesheet" href="html5up-phantom/assets/css/noscript.css" /></noscript>
    <!-- Reorganized CSS structure - single import -->
    <link rel="stylesheet" href="html5up-phantom/assets/css/main.css" />
    <noscript><link rel="stylesheet" href="html5up-phantom/assets/css/noscript.css" /></noscript>
    <!-- Reorganized CSS structure - single import -->
    <link rel="stylesheet" href="html5up-phantom/assets/css/main.css" />
    <noscript><link rel="stylesheet" href="html5up-phantom/assets/css/noscript.css" /></noscript>
    <!-- Reorganized CSS structure - single import -->
    <link rel="stylesheet" href="html5up-phantom/assets/css/main.css" />
    <noscript><link rel="stylesheet" href="html5up-phantom/assets/css/noscript.css" /></noscript>
    <noscript><!-- Reorganized CSS structure - single import -->
    <link rel="stylesheet" href="html5up-phantom/assets/css/main.css" />
    <noscript><link rel="stylesheet" href="html5up-phantom/assets/css/noscript.css" /></noscript></noscript>

    <style>
        .logo-container {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 30px;
            margin-bottom: 2em;
            flex-wrap: wrap;
            padding: 0 15px;
        }

        .logo {
            width: 100%;
            max-width: 400px;
            height: auto;
            object-fit: contain;
            margin: 10px;
        }

        .about-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px;
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        }

        .about-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .about-header h1 {
            color: #333;
            font-size: 2.5em;
            margin-bottom: 20px;
        }

        .about-content {
            font-size: 1.1em;
            line-height: 1.6;
            color: #444;
        }

        .about-section {
            margin-bottom: 40px;
            padding: 30px;
            background: #fcfcfc;
            border-radius: 8px;
            transition: transform 0.3s ease;
        }

        .about-section:hover {
            transform: translateY(-5px);
        }

        .about-section h2 {
            color: #2c3e50;
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        @media screen and (max-width: 980px) {
            .about-container {
                padding: 20px;
            }

            .about-section {
                padding: 20px;
            }

            .about-header h1 {
                font-size: 2em;
            }
        }

        /* Critical styles for menu visibility */
        body.is-menu-visible #menu {
            display: block !important;
            visibility: visible !important;
            right: 0 !important;
            z-index: 10000 !important;
        }
        
        #menu {
            transition: all 0.5s ease;
            position: fixed !important;
            top: 0 !important;
            height: 100% !important;
            width: 300px !important;
            max-width: 80% !important;
            right: -300px !important;
            z-index: 10000 !important;
            overflow-y: auto !important;
        }
        
        #menu.visible {
            display: block !important;
            visibility: visible !important;
            right: 0 !important;
        }
        
        /* Increase z-index for menu toggle button */
        a[href="#menu"] {
            z-index: 9000 !important;
            position: relative !important;
        }
        
        /* Ensure menu appears above other elements */
        nav#menu {
            z-index: 10000 !important;
        }
    </style>
</head>
<body class="is-preload">
    <!-- Wrapper -->
    <div id="wrapper">
        <!-- Header -->
        <header id="header">
            <div class="inner">
                <!-- Logo -->
                <a href="index.html" class="logo">
                    <span class="symbol"><img src="./images/VEXUS.ATLAS.png" alt="" /></span>
                    <span class="title">VExUS ATLAS</span>
                </a>
                
                <!-- Nav -->
                <nav>
                    <ul>
                        <li><a href="#menu">Menu</a></li>
                    </ul>
                </nav>
            </div>
        </header>

        <!-- Menu -->
        <nav id="menu">
            <div class="inner">
                <div class="logo-container">
                    <img src="./images/VEXUS.ATLAS.png" alt="VExUS ATLAS Logo" class="sidebar-logo">
                </div>
                <h2>Menu</h2>
                <ul>
                    <li><a href="index.html">Home</a></li>
                    <li><a href="education.html">VEXUS Overview</a></li>
                    <li><a href="waveform.html">Waveforms</a></li>
                    <li><a href="calculator.html">AI Image Recognition</a></li>
                    <li><a href="acquisition.html">Image Acquisition Guide</a></li>
                    <li><a href="Publications.html">Publications</a></li>
                    <li><a href="literature_review.html">Literature Review</a></li>
                    <li><a href="image_gallery.html">Image Gallery</a></li>
                    <li><a href="about.html">About VExUS ATLAS</a></li>
                    <li><a href="our_team.html">Our Team</a></li>
                    <li><a href="contact.html">Contact</a></li>
                </ul>
                <a href="#menu" class="close">âœ•</a>
            </div>
        </nav>

        <!-- Main -->
        <div id="main">
            <div class="inner">
                <div class="logo-container">
                    <img src="./images/VEXUS.ATLAS.png" alt="VExUS ATLAS Logo" class="logo">
                </div>
                
                <div class="about-container">
                    <div class="about-header">
                        <h1>About VExUS ATLAS</h1>
                    </div>

                    <div class="about-content">
                        <div class="about-section">
                            <h2>Our Mission</h2>
                            <p>VExUS ATLAS is dedicated to advancing the understanding and application of Venous Excess Ultrasound (VExUS) in clinical practice. Our mission is to provide healthcare professionals with cutting-edge tools and resources for assessing venous congestion through ultrasound imaging.</p>
                        </div>

                        <div class="about-section">
                            <h2>What We Do</h2>
                            <p>We combine artificial intelligence with clinical expertise to:</p>
                            <ul>
                                <li>Provide automated analysis of VExUS images</li>
                                <li>Offer comprehensive educational resources</li>
                                <li>Support healthcare professionals in implementing VExUS in their practice</li>
                                <li>Advance research in venous congestion assessment</li>
                            </ul>
                        </div>

                        <div class="about-section">
                            <h2>Our Vision</h2>
                            <p>We envision a future where VExUS assessment becomes a standard tool in critical care and cardiology, enabling better patient outcomes through early detection and monitoring of venous congestion.</p>
                        </div>

                        <div class="about-section">
                            <h2>Innovation in Healthcare</h2>
                            <p>By leveraging artificial intelligence and machine learning, we're making VExUS assessment more accessible, accurate, and efficient. Our platform represents a significant step forward in the integration of technology and clinical practice.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="html5up-phantom/assets/js/jquery.min.js"></script>
    <script src="html5up-phantom/assets/js/browser.min.js"></script>
    <script src="html5up-phantom/assets/js/breakpoints.min.js"></script>
    <script src="html5up-phantom/assets/js/util.js"></script>
    <script src="html5up-phantom/assets/js/performance-utils.js"></script>
    <script src="html5up-phantom/assets/js/main.js"></script>
    <script src="html5up-phantom/assets/js/add-tpa-link.js"></script>
    
    <!-- Menu Toggle Script -->
    <script>
        // Function to initialize menu toggle
        function initializeMenuToggle() {
            console.log("Initializing menu toggle");
            
            try {
                // Get menu elements
                const menuToggle = document.querySelector('a[href="#menu"]');
                const menu = document.getElementById('menu');
                
                if (!menuToggle) {
                    console.error("Menu toggle element not found!");
                    return;
                }
                
                if (!menu) {
                    console.error("Menu element not found!");
                    return;
                }
                
                // First ensure menu is properly hidden to start
                document.body.classList.remove('is-menu-visible');
                menu.style.right = "-100%";
                menu.style.display = "none";
                menu.classList.remove('visible', 'active');
                
                // Remove any existing click handlers by cloning and replacing
                const newMenuToggle = menuToggle.cloneNode(true);
                menuToggle.parentNode.replaceChild(newMenuToggle, menuToggle);
                
                // Add our click handler with support for both CSS class and display property
                newMenuToggle.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    console.log("Menu toggle clicked");
                    
                    // Use both approaches: class toggle (for theme) and display property (for our custom code)
                    document.body.classList.add('is-menu-visible');
                    menu.style.display = 'block';
                    menu.style.right = '0';
                    menu.classList.add('visible', 'active');
                    
                    // Force a repaint to ensure styles are applied
                    void menu.offsetWidth;
                });
                
                // Create close button handler (important for mobile)
                const closeButton = menu.querySelector('a.close');
                if (closeButton) {
                    const newCloseButton = closeButton.cloneNode(true);
                    closeButton.parentNode.replaceChild(newCloseButton, closeButton);
                    
                    newCloseButton.addEventListener('click', function(e) {
                        e.preventDefault();
                        e.stopPropagation();
                        console.log("Close button clicked");
                        
                        // Hide menu using both approaches
                        document.body.classList.remove('is-menu-visible');
                        menu.style.display = 'none';
                        menu.style.right = '-100%';
                        menu.classList.remove('visible', 'active');
                    });
                }
                
                // Handle clicks outside the menu (use capture phase to run before other handlers)
                const bodyClickHandler = function(e) {
                    // If clicking outside menu and not on menu toggle
                    if (!e.target.closest('#menu') && !e.target.closest('a[href="#menu"]')) {
                        console.log("Clicked outside menu");
                        
                        // Hide menu using both approaches
                        document.body.classList.remove('is-menu-visible');
                        menu.style.display = 'none';
                        menu.style.right = '-100%';
                        menu.classList.remove('visible', 'active');
                    }
                };
                
                // Remove any existing body click handler and add our new one
                document.body.removeEventListener('click', bodyClickHandler, true);
                document.body.addEventListener('click', bodyClickHandler, true);
                
                // Handle escape key
                const keyHandler = function(e) {
                    if (e.key === 'Escape' || e.keyCode === 27) {
                        document.body.classList.remove('is-menu-visible');
                        menu.style.display = 'none';
                        menu.style.right = '-100%';
                        menu.classList.remove('visible', 'active');
                    }
                };
                
                // Remove any existing key handler and add our new one
                document.removeEventListener('keydown', keyHandler);
                document.addEventListener('keydown', keyHandler);
                
                console.log("Menu toggle initialization complete");
            } catch (error) {
                console.error("Error initializing menu toggle:", error);
            }
        }
        
        // Initialize the menu toggle after DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            console.log("DOM loaded, initializing menu toggle");
            // Initial setup with delay to ensure DOM is fully processed
            setTimeout(initializeMenuToggle, 100);
        });
        
        // Fallback initialization in case DOMContentLoaded already fired
        if (document.readyState === 'complete' || document.readyState === 'interactive') {
            console.log("Document already loaded, running fallback initialization");
            setTimeout(initializeMenuToggle, 200);
        }
    </script>
</body>
</html>